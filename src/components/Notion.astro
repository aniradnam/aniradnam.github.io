---
import { Client } from '@notionhq/client';
import NotionRenderer from './NotionRender.astro';

const notion = new Client({ auth: import.meta.env.NOTION_API_KEY });
const { pageId } = Astro.props;

let blocks: { [x: number]: { rich_text: any; } | { title: any; } | undefined; type: any; }[] = [];
let error = null;

try {
  const response = await notion.blocks.children.list({ block_id: pageId });
  blocks = response.results.map((block) => {
    const type = (block as { type: any }).type;
    const richTextKey = block.hasOwnProperty(type) && block[type]?.rich_text ? { rich_text: block[type].rich_text } : undefined;

    return {
      type,
      [type]: richTextKey || (block.hasOwnProperty(type) && block[type]?.title ? { title: block[type].title } : undefined),
    };
  });
} catch (err) {
  error = err;
  console.error('Error al obtener el contenido de la p√°gina de Notion:', error);
}

---

{error && <p>Error al cargar el contenido: {(error as Error).message}</p>}

<div class="max-w-4xl w-full m-auto">
  <NotionRenderer blocks={blocks} />
</div>
